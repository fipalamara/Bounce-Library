{\rtf1\ansi\ansicpg1252\cocoartf1404\cocoasubrtf470
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\margl1440\margr1440\vieww10800\viewh8400\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 Translating Code into English \
\
2. Python \
//Show a ball bouncing off the sides of a window \
\
import graphics, time and random* \
\
Define bounceInBox which takes in (shape, dx, dy, xLow, xHigh, yLow, yHigh):\
// Animate a shape moving in jumps (dx, dy), bouncing when its center reaches the low and high x and y coordinates \
\
	Set delay to .005\
	Create a for loop for when i is in range of 600 \
	shape.move(dx, dy) // move jumps for x and y coordinates \
	center = shape.getCenter ( ) \
	\
	//Getters \
	x = center.getX( ) // get center x coordinate\
	y = center.getY( ) //get center y coordinate \
	\
	if x < xLow:\
		dx = -dy\
	elif y > yHigh:    //else if \
		dy = -dy\
	time.sleep(delay) \
\
Define getRandomPoint which takes in (xLow, xHigh, yLow, yHigh): \
// Return a random point with coordinates in the range specified\
	//Setters\
	x = random.randrange (xLow, xHigh + 1)\
	y = random.randrange (yLow, yHigh + 1) \
	return Point(x, y)\
\
Define makeDisk which takes in (center, radius, win): \
// Return a red disk that is drawn in win with given center and radius \
	//Set disk to be circle \
	disk = Circle (center, radius) \
	disk.setOutline(\'93red\'94) \
	disk.setFill(\'93red\'94)\
	disk.draw(win)\
	return disk \
\
Define bounceBall(dx, dy): \
// Make a ball bounce around the screen, initially moving by (dx, dy) at each jump\'94 \
	Set winWidth to be 290\
	Set winHeight to be 290 \
	win = GraphWin(\'91Ball Bounce\'92 , winWidth, winHeight)\
	win.setCoords(0, 0, winWidth, winHeight) \
\
	Set radius to be 10\
	xLow = radius # center is separated from the wall by the radius at a bounce \
	xHigh = winWidth - radius \
	yLow = radius \
	yHigh = winHeight - radius \
\
	Set center to function getRandomPoint(xLow, xHigh, yLow, yHigh)\
	Set ball to function makeDisk(center, radius, win) \
\
	Call function bounceinBox(ball, dx, dy, xLow, xHigh, yLow, yHigh)\
	\
	win.close( )\
\
bounceBall(3, 5)  }